<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="812px" preserveAspectRatio="none" style="width:1542px;height:812px;background:#FFFFFF;" version="1.1" viewBox="0 0 1542 812" width="1542px" zoomAndPan="magnify"><defs><filter height="300%" id="f18x2xj2odbwru" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[b6dcce5e5ef3c84b0b048d11301373dd]
class Game--><rect codeLine="2" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="125.7305" id="Game" style="stroke:#A80036;stroke-width:1.5;" width="392" x="556.5" y="7"/><ellipse cx="731.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M733.7231,29.1431 Q733.1421,29.4419 732.5029,29.5913 Q731.8638,29.7407 731.1582,29.7407 Q728.6514,29.7407 727.3315,28.0889 Q726.0117,26.437 726.0117,23.3159 Q726.0117,20.1865 727.3315,18.5347 Q728.6514,16.8828 731.1582,16.8828 Q731.8638,16.8828 732.5112,17.0322 Q733.1587,17.1816 733.7231,17.4805 L733.7231,20.2031 Q733.0923,19.6221 732.4988,19.3523 Q731.9053,19.0825 731.2744,19.0825 Q729.9297,19.0825 729.2449,20.1492 Q728.5601,21.2158 728.5601,23.3159 Q728.5601,25.4077 729.2449,26.4744 Q729.9297,27.541 731.2744,27.541 Q731.9053,27.541 732.4988,27.2712 Q733.0923,27.0015 733.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="751.75" y="27.5352">Game</text><line style="stroke:#A80036;stroke-width:1.5;" x1="557.5" x2="947.5" y1="39" y2="39"/><polygon fill="none" points="567.5,45,571.5,49,567.5,53,563.5,49" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="576.5" y="53.6348">Command[string] _commands;</text><ellipse cx="567.5" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="576.5" y="66.5898">bool failed</text><line style="stroke:#A80036;stroke-width:1.5;" x1="557.5" x2="947.5" y1="72.9102" y2="72.9102"/><ellipse cx="567.5" cy="83.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="576.5" y="87.5449">@property bool won()</text><ellipse cx="567.5" cy="96.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="576.5" y="100.5">int mainLoop()</text><ellipse cx="567.5" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="576.5" y="113.4551">void registerCommand(string commandName, Command command)</text><ellipse cx="567.5" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="259" x="576.5" y="126.4102">Board generateBoardWith(ProgramArgument pa)</text><!--MD5=[9563755d011c5cec7ec66dc53565a59e]
class Board--><rect codeLine="37" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="406.7422" id="Board" style="stroke:#A80036;stroke-width:1.5;" width="312" x="34.5" y="193"/><ellipse cx="169.25" cy="209" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M171.7231,215.1431 Q171.1421,215.4419 170.5029,215.5913 Q169.8638,215.7407 169.1582,215.7407 Q166.6514,215.7407 165.3315,214.0889 Q164.0117,212.437 164.0117,209.3159 Q164.0117,206.1865 165.3315,204.5347 Q166.6514,202.8828 169.1582,202.8828 Q169.8638,202.8828 170.5112,203.0322 Q171.1587,203.1816 171.7231,203.4805 L171.7231,206.2031 Q171.0923,205.6221 170.4988,205.3523 Q169.9053,205.0825 169.2744,205.0825 Q167.9297,205.0825 167.2449,206.1492 Q166.5601,207.2158 166.5601,209.3159 Q166.5601,211.4077 167.2449,212.4744 Q167.9297,213.541 169.2744,213.541 Q169.9053,213.541 170.4988,213.2712 Q171.0923,213.0015 171.7231,212.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="189.75" y="213.5352">Board</text><line style="stroke:#A80036;stroke-width:1.5;" x1="35.5" x2="345.5" y1="225" y2="225"/><polygon fill="none" points="45.5,231,49.5,235,45.5,239,41.5,235" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="54.5" y="239.6348">uint _height;</text><polygon fill="none" points="45.5,243.9551,49.5,247.9551,45.5,251.9551,41.5,247.9551" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="54.5" y="252.5898">uint _width;</text><polygon fill="none" points="45.5,256.9102,49.5,260.9102,45.5,264.9102,41.5,260.9102" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="54.5" y="265.5449">uint _mine_amount;</text><polygon fill="none" points="45.5,269.8652,49.5,273.8652,45.5,277.8652,41.5,273.8652" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="54.5" y="278.5">uint _flag_count;</text><polygon fill="none" points="45.5,282.8203,49.5,286.8203,45.5,290.8203,41.5,286.8203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="54.5" y="291.4551">uint _opened_count;</text><polygon fill="none" points="45.5,295.7754,49.5,299.7754,45.5,303.7754,41.5,299.7754" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="54.5" y="304.4102">byte[][] _surrounding_mine_cell_counts;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="57.5" y="317.3652"/><ellipse cx="45.5" cy="326.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="54.5" y="330.3203">@property uint height()</text><ellipse cx="45.5" cy="339.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="54.5" y="343.2754">@property uint width()</text><ellipse cx="45.5" cy="352.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="54.5" y="356.2305">@property uint mine_amount()</text><ellipse cx="45.5" cy="365.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="54.5" y="369.1855">@property uint flag_count()</text><ellipse cx="45.5" cy="378.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="54.5" y="382.1406">@property uint opened_count()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="57.5" y="395.0957"/><ellipse cx="45.5" cy="404.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="54.5" y="408.0508">Cell getCell(Index2D i2d)</text><polygon fill="#FFFF44" points="45.5,412.3711,49.5,416.3711,45.5,420.3711,41.5,416.3711" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="54.5" y="421.0059">void setCell(Index2D i2d, Cell cell)</text><ellipse cx="45.5" cy="430.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="54.5" y="433.9609">bool setMine(Index2D i2d)</text><ellipse cx="45.5" cy="443.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="54.5" y="446.916">void openCell(Index2D i2d)</text><ellipse cx="45.5" cy="456.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="54.5" y="459.8711">bool toggleFlagged(Index2D i2d)</text><ellipse cx="45.5" cy="469.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="54.5" y="472.8262">ubyte getSurroundingMineCellCount(Index2D i2d)</text><ellipse cx="45.5" cy="482.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="54.5" y="485.7813">ubyte getSurroundingFlaggedCellCount(Index2D i2d)</text><ellipse cx="45.5" cy="495.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="54.5" y="498.7363">bool isValidCellIndex(Index2D i2d)</text><polygon fill="#FFFF44" points="45.5,503.0566,49.5,507.0566,45.5,511.0566,41.5,507.0566" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="54.5" y="511.6914">string getCellString(Index2D i2d)</text><ellipse cx="45.5" cy="521.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="54.5" y="524.6465">override string toString()</text><ellipse cx="45.5" cy="533.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="54.5" y="537.6016">override bool opEquals(Object other)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="57.5" y="550.5566"/><ellipse cx="45.5" cy="576.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="54.5" y="580.4668">debug @property Cell[][] cells()</text><ellipse cx="45.5" cy="589.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="54.5" y="593.4219">debug ulong getActualMineCount()</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="35.5" x2="111.5" y1="563.3545" y2="563.3545"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="111.5" y="567.0117">debug 用プロパティ・メソッド</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="269.5" x2="345.5" y1="563.3545" y2="563.3545"/><!--MD5=[521817ab83e81da341a3f4b5e91bae41]
class Command--><rect codeLine="97" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="60.9551" id="Command" style="stroke:#A80036;stroke-width:1.5;" width="211" x="479" y="366"/><ellipse cx="550.75" cy="382" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M547.1777,378.2651 L547.1777,376.1069 L554.5571,376.1069 L554.5571,378.2651 L552.0918,378.2651 L552.0918,386.3418 L554.5571,386.3418 L554.5571,388.5 L547.1777,388.5 L547.1777,386.3418 L549.6431,386.3418 L549.6431,378.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="59" x="571.25" y="386.5352">Command</text><line style="stroke:#A80036;stroke-width:1.5;" x1="480" x2="689" y1="398" y2="398"/><line style="stroke:#A80036;stroke-width:1.5;" x1="480" x2="689" y1="406" y2="406"/><ellipse cx="490" cy="417" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="499" y="420.6348">execute(string[] args, Game game)</text><!--MD5=[dd7d696a0ce3e176ad9f9adf3e4f6c7c]
class BoardGenerator--><rect codeLine="77" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="99.8203" id="BoardGenerator" style="stroke:#A80036;stroke-width:1.5;" width="203" x="820" y="346.5"/><ellipse cx="871.25" cy="362.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M871.1133,357.8481 L869.9595,362.9199 L872.2754,362.9199 Z M869.6191,355.6069 L872.6157,355.6069 L875.9609,368 L873.5122,368 L872.7485,364.937 L869.4697,364.937 L868.7227,368 L866.2739,368 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="92" x="891.75" y="367.0352">BoardGenerator</text><line style="stroke:#A80036;stroke-width:1.5;" x1="821" x2="1022" y1="378.5" y2="378.5"/><polygon fill="none" points="831,384.5,835,388.5,831,392.5,827,388.5" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="840" y="393.1348">uint _board_height</text><polygon fill="none" points="831,397.4551,835,401.4551,831,405.4551,827,401.4551" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="840" y="406.0898">uint _board_width</text><line style="stroke:#A80036;stroke-width:1.5;" x1="821" x2="1022" y1="412.4102" y2="412.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="826" y="427.0449">@property Index2D[] mineIndexes()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="826" y="440">Board generateBoard()</text><!--MD5=[a7b126c26e1f188e6786231a8cbc786e]
class ProgramArgument--><rect codeLine="70" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="106.0859" id="ProgramArgument" style="stroke:#A80036;stroke-width:1.5;" width="145" x="1058" y="343.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="44" x="1108.5" y="360.1016">«struct»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="105" x="1078" y="374.2344">ProgramArgument</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1059" x2="1202" y1="381.7656" y2="381.7656"/><ellipse cx="1069" cy="392.7656" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1078" y="396.4004">uint board_height</text><ellipse cx="1069" cy="405.7207" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="1078" y="409.3555">uint board_width</text><ellipse cx="1069" cy="418.6758" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="1078" y="422.3105">uint mine_amount</text><ellipse cx="1069" cy="431.6309" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="1078" y="435.2656">string board_file_path</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1059" x2="1202" y1="441.5859" y2="441.5859"/><!--MD5=[fea3dc74c7473bae0133d22265a91e2f]
class Cell--><rect codeLine="17" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="138.6855" id="Cell" style="stroke:#A80036;stroke-width:1.5;" width="173" x="7" y="660"/><ellipse cx="78.75" cy="676" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M82.3643,682.5 L74.6445,682.5 L74.6445,670.1069 L82.3643,670.1069 L82.3643,672.2651 L77.0933,672.2651 L77.0933,674.938 L81.8662,674.938 L81.8662,677.0962 L77.0933,677.0962 L77.0933,680.3418 L82.3643,680.3418 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="21" x="99.25" y="680.5352">Cell</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="179" y1="692" y2="692"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="13" y="706.6348">empty</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="26" x="13" y="719.5898">mine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="13" y="732.5449">mineFlagged</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="13" y="745.5">emptyFlagged</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="13" y="758.4551">opened</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="179" y1="764.7754" y2="764.7754"/><ellipse cx="18" cy="775.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="27" y="779.4102">bool isFlaggedCell(Cell cell)</text><ellipse cx="18" cy="788.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="130" x="27" y="792.3652">bool isMineCell(Cell cell)</text><!--MD5=[4beb704b34bec23376a5b9e261aa8c4d]
class Index2D--><rect codeLine="28" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="119.041" id="Index2D" style="stroke:#A80036;stroke-width:1.5;" width="361" x="984" y="10.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="44" x="1142.5" y="27.1016">«struct»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="1140" y="41.2344">Index2D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="985" x2="1344" y1="48.7656" y2="48.7656"/><ellipse cx="995" cy="59.7656" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1004" y="63.4004">int x</text><ellipse cx="995" cy="72.7207" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1004" y="76.3555">int y</text><line style="stroke:#A80036;stroke-width:1.5;" x1="985" x2="1344" y1="82.6758" y2="82.6758"/><ellipse cx="995" cy="93.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1004" y="97.3105">int opCmp(const Index2D other)</text><ellipse cx="995" cy="106.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="1004" y="110.2656">Index2D opBinary(string op)(const Index2D rhs) if (op == "+")</text><ellipse cx="995" cy="119.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="1004" y="123.2207">Index2D opBinary(string op)(const Index2D rhs) if (op == "-")</text><!--MD5=[54372792a7aec6d48a3ba1b88f840f78]
class RandomBoardGenerator--><rect codeLine="85" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="60.9551" id="RandomBoardGenerator" style="stroke:#A80036;stroke-width:1.5;" width="172" x="835.5" y="699"/><ellipse cx="850.5" cy="715" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M852.9731,721.1431 Q852.3921,721.4419 851.7529,721.5913 Q851.1138,721.7407 850.4082,721.7407 Q847.9014,721.7407 846.5815,720.0889 Q845.2617,718.437 845.2617,715.3159 Q845.2617,712.1865 846.5815,710.5347 Q847.9014,708.8828 850.4082,708.8828 Q851.1138,708.8828 851.7612,709.0322 Q852.4087,709.1816 852.9731,709.4805 L852.9731,712.2031 Q852.3423,711.6221 851.7488,711.3523 Q851.1553,711.0825 850.5244,711.0825 Q849.1797,711.0825 848.4949,712.1492 Q847.8101,713.2158 847.8101,715.3159 Q847.8101,717.4077 848.4949,718.4744 Q849.1797,719.541 850.5244,719.541 Q851.1553,719.541 851.7488,719.2712 Q852.3423,719.0015 852.9731,718.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="140" x="864.5" y="719.5352">RandomBoardGenerator</text><line style="stroke:#A80036;stroke-width:1.5;" x1="836.5" x2="1006.5" y1="731" y2="731"/><polygon fill="none" points="846.5,737,850.5,741,846.5,745,842.5,741" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="855.5" y="745.6348">uint _mine_amount</text><line style="stroke:#A80036;stroke-width:1.5;" x1="836.5" x2="1006.5" y1="751.9551" y2="751.9551"/><!--MD5=[a543c5db4a062e09f88e0d2e5ce982bd]
class ManualBoardGenerator--><rect codeLine="89" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="60.9551" id="ManualBoardGenerator" style="stroke:#A80036;stroke-width:1.5;" width="231" x="1043" y="699"/><ellipse cx="1087.75" cy="715" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1090.2231,721.1431 Q1089.6421,721.4419 1089.0029,721.5913 Q1088.3638,721.7407 1087.6582,721.7407 Q1085.1514,721.7407 1083.8315,720.0889 Q1082.5117,718.437 1082.5117,715.3159 Q1082.5117,712.1865 1083.8315,710.5347 Q1085.1514,708.8828 1087.6582,708.8828 Q1088.3638,708.8828 1089.0112,709.0322 Q1089.6587,709.1816 1090.2231,709.4805 L1090.2231,712.2031 Q1089.5923,711.6221 1088.9988,711.3523 Q1088.4053,711.0825 1087.7744,711.0825 Q1086.4297,711.0825 1085.7449,712.1492 Q1085.0601,713.2158 1085.0601,715.3159 Q1085.0601,717.4077 1085.7449,718.4744 Q1086.4297,719.541 1087.7744,719.541 Q1088.4053,719.541 1088.9988,719.2712 Q1089.5923,719.0015 1090.2231,718.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="133" x="1108.25" y="719.5352">ManualBoardGenerator</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1044" x2="1273" y1="731" y2="731"/><polygon fill="none" points="1054,737,1058,741,1054,745,1050,741" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="1063" y="745.6348">RedBlackTree!Index2D _mine_indexes;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1044" x2="1273" y1="751.9551" y2="751.9551"/><!--MD5=[0db8e037c53f1e4e37b778564f4ba2ab]
class FromBoardStringBoardGenerator--><rect codeLine="93" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="60.9551" id="FromBoardStringBoardGenerator" style="stroke:#A80036;stroke-width:1.5;" width="219" x="1309" y="699"/><ellipse cx="1324" cy="715" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1326.4731,721.1431 Q1325.8921,721.4419 1325.2529,721.5913 Q1324.6138,721.7407 1323.9082,721.7407 Q1321.4014,721.7407 1320.0815,720.0889 Q1318.7617,718.437 1318.7617,715.3159 Q1318.7617,712.1865 1320.0815,710.5347 Q1321.4014,708.8828 1323.9082,708.8828 Q1324.6138,708.8828 1325.2612,709.0322 Q1325.9087,709.1816 1326.4731,709.4805 L1326.4731,712.2031 Q1325.8423,711.6221 1325.2488,711.3523 Q1324.6553,711.0825 1324.0244,711.0825 Q1322.6797,711.0825 1321.9949,712.1492 Q1321.3101,713.2158 1321.3101,715.3159 Q1321.3101,717.4077 1321.9949,718.4744 Q1322.6797,719.541 1324.0244,719.541 Q1324.6553,719.541 1325.2488,719.2712 Q1325.8423,719.0015 1326.4731,718.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="187" x="1338" y="719.5352">FromBoardStringBoardGenerator</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1310" x2="1527" y1="731" y2="731"/><polygon fill="none" points="1320,737,1324,741,1320,745,1316,741" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1329" y="745.6348">Index2D[] _mine_indexes;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1310" x2="1527" y1="751.9551" y2="751.9551"/><!--MD5=[6f8a4083e5f9147c3094a66480ebcfe9]
class OpenCommand--><rect codeLine="101" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="48" id="OpenCommand" style="stroke:#A80036;stroke-width:1.5;" width="122" x="215.5" y="705.5"/><ellipse cx="230.5" cy="721.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M232.9731,727.6431 Q232.3921,727.9419 231.7529,728.0913 Q231.1138,728.2407 230.4082,728.2407 Q227.9014,728.2407 226.5815,726.5889 Q225.2617,724.937 225.2617,721.8159 Q225.2617,718.6865 226.5815,717.0347 Q227.9014,715.3828 230.4082,715.3828 Q231.1138,715.3828 231.7612,715.5322 Q232.4087,715.6816 232.9731,715.9805 L232.9731,718.7031 Q232.3423,718.1221 231.7488,717.8523 Q231.1553,717.5825 230.5244,717.5825 Q229.1797,717.5825 228.4949,718.6492 Q227.8101,719.7158 227.8101,721.8159 Q227.8101,723.9077 228.4949,724.9744 Q229.1797,726.041 230.5244,726.041 Q231.1553,726.041 231.7488,725.7712 Q232.3423,725.5015 232.9731,724.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="90" x="244.5" y="726.0352">OpenCommand</text><line style="stroke:#A80036;stroke-width:1.5;" x1="216.5" x2="336.5" y1="737.5" y2="737.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="216.5" x2="336.5" y1="745.5" y2="745.5"/><!--MD5=[c27ff9eb449ebfbe6c29f5fe71f93162]
class FlagCommand--><rect codeLine="102" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="48" id="FlagCommand" style="stroke:#A80036;stroke-width:1.5;" width="114" x="372.5" y="705.5"/><ellipse cx="387.5" cy="721.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M389.9731,727.6431 Q389.3921,727.9419 388.7529,728.0913 Q388.1138,728.2407 387.4082,728.2407 Q384.9014,728.2407 383.5815,726.5889 Q382.2617,724.937 382.2617,721.8159 Q382.2617,718.6865 383.5815,717.0347 Q384.9014,715.3828 387.4082,715.3828 Q388.1138,715.3828 388.7612,715.5322 Q389.4087,715.6816 389.9731,715.9805 L389.9731,718.7031 Q389.3423,718.1221 388.7488,717.8523 Q388.1553,717.5825 387.5244,717.5825 Q386.1797,717.5825 385.4949,718.6492 Q384.8101,719.7158 384.8101,721.8159 Q384.8101,723.9077 385.4949,724.9744 Q386.1797,726.041 387.5244,726.041 Q388.1553,726.041 388.7488,725.7712 Q389.3423,725.5015 389.9731,724.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="82" x="401.5" y="726.0352">FlagCommand</text><line style="stroke:#A80036;stroke-width:1.5;" x1="373.5" x2="485.5" y1="737.5" y2="737.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="373.5" x2="485.5" y1="745.5" y2="745.5"/><!--MD5=[b985486384d579df95ed339c0c3591bf]
class ChordCommand--><rect codeLine="103" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="48" id="ChordCommand" style="stroke:#A80036;stroke-width:1.5;" width="126" x="521.5" y="705.5"/><ellipse cx="536.5" cy="721.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M538.9731,727.6431 Q538.3921,727.9419 537.7529,728.0913 Q537.1138,728.2407 536.4082,728.2407 Q533.9014,728.2407 532.5815,726.5889 Q531.2617,724.937 531.2617,721.8159 Q531.2617,718.6865 532.5815,717.0347 Q533.9014,715.3828 536.4082,715.3828 Q537.1138,715.3828 537.7612,715.5322 Q538.4087,715.6816 538.9731,715.9805 L538.9731,718.7031 Q538.3423,718.1221 537.7488,717.8523 Q537.1553,717.5825 536.5244,717.5825 Q535.1797,717.5825 534.4949,718.6492 Q533.8101,719.7158 533.8101,721.8159 Q533.8101,723.9077 534.4949,724.9744 Q535.1797,726.041 536.5244,726.041 Q537.1553,726.041 537.7488,725.7712 Q538.3423,725.5015 538.9731,724.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="94" x="550.5" y="726.0352">ChordCommand</text><line style="stroke:#A80036;stroke-width:1.5;" x1="522.5" x2="646.5" y1="737.5" y2="737.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="522.5" x2="646.5" y1="745.5" y2="745.5"/><!--MD5=[2da30295f32c4049cb863910634fa3f4]
class HelpCommand--><rect codeLine="104" fill="#FEFECE" filter="url(#f18x2xj2odbwru)" height="48" id="HelpCommand" style="stroke:#A80036;stroke-width:1.5;" width="118" x="682.5" y="705.5"/><ellipse cx="697.5" cy="721.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M699.9731,727.6431 Q699.3921,727.9419 698.7529,728.0913 Q698.1138,728.2407 697.4082,728.2407 Q694.9014,728.2407 693.5815,726.5889 Q692.2617,724.937 692.2617,721.8159 Q692.2617,718.6865 693.5815,717.0347 Q694.9014,715.3828 697.4082,715.3828 Q698.1138,715.3828 698.7612,715.5322 Q699.4087,715.6816 699.9731,715.9805 L699.9731,718.7031 Q699.3423,718.1221 698.7488,717.8523 Q698.1553,717.5825 697.5244,717.5825 Q696.1797,717.5825 695.4949,718.6492 Q694.8101,719.7158 694.8101,721.8159 Q694.8101,723.9077 695.4949,724.9744 Q696.1797,726.041 697.5244,726.041 Q698.1553,726.041 698.7488,725.7712 Q699.3423,725.5015 699.9731,724.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="86" x="711.5" y="726.0352">HelpCommand</text><line style="stroke:#A80036;stroke-width:1.5;" x1="683.5" x2="799.5" y1="737.5" y2="737.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="683.5" x2="799.5" y1="745.5" y2="745.5"/><!--MD5=[d80fc484ee68f400f3119ddff68de44b]
reverse link Game to Board--><path codeLine="12" d="M572.7,138.26 C535.13,154.54 496.37,173.07 461.5,193 C422.75,215.15 383.12,242 346.55,268.8 " fill="none" id="Game-backto-Board" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="584.85,133.05,577.7604,131.7318,573.8169,137.7691,580.9065,139.0873,584.85,133.05" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2056594a1bea65a7629e8010f30a6a7f]
reverse link Game to Command--><path codeLine="13" d="M714.2,144.97 C678.04,214.81 625.64,316.03 599.92,365.71 " fill="none" id="Game-backto-Command" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="720.31,133.18,714.0004,136.6712,714.7962,143.8382,721.1059,140.3471,720.31,133.18" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[246c7154cb76716643f710f0c165606d]
link Game to BoardGenerator--><path codeLine="14" d="M784.88,133.18 C816.3,193.51 863.49,284.1 893.37,341.49 " fill="none" id="Game-to-BoardGenerator" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="895.85,346.25,895.2517,336.4193,893.5455,341.8127,888.1521,340.1065,895.85,346.25" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f3c6496ac79c7218d0c85303e75f283d]
link Game to ProgramArgument--><path codeLine="15" d="M948.84,130.43 C982.22,146.84 1014.45,167.41 1040.5,193 C1080.88,232.68 1104.57,293.64 1117.42,338.31 " fill="none" id="Game-to-ProgramArgument" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="1118.78,343.13,1120.188,333.3823,1117.4234,338.3176,1112.4881,335.5529,1118.78,343.13" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5778a4432fb065f83ccf0aa932a03c78]
reverse link Board to Cell--><path codeLine="68" d="M127.37,612.94 C122.48,629.61 117.81,645.54 113.59,659.95 " fill="none" id="Board-backto-Cell" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="131.14,600.05,125.6133,604.682,127.7633,611.5651,133.29,606.9331,131.14,600.05" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[62522b31e5d7297f1f2723fb41695adf]
reverse link BoardGenerator to RandomBoardGenerator--><path d="M921.5,466.74 C921.5,538.36 921.5,646.85 921.5,698.77 " fill="none" id="BoardGenerator-backto-RandomBoardGenerator" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="914.5,466.7,921.5,446.7,928.5,466.7,914.5,466.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[47e0b5700d0cca398b29f508fb36295e]
reverse link BoardGenerator to ManualBoardGenerator--><path d="M956.21,464.53 C978.33,505.08 1008.74,557.08 1040.5,600 C1067.34,636.28 1102.91,673.86 1127.96,698.93 " fill="none" id="BoardGenerator-backto-ManualBoardGenerator" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="949.97,467.7,946.65,446.77,962.29,461.07,949.97,467.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1e53503f68150238a3e959f371af4e05]
reverse link BoardGenerator to FromBoardStringBoardGenerator--><path d="M945.05,465.21 C964.05,509.99 995.14,566.43 1040.5,600 C1132.7,668.23 1184.34,619.1 1291.5,660 C1318.77,670.41 1347.52,685.53 1370.75,698.92 " fill="none" id="BoardGenerator-backto-FromBoardStringBoardGenerator" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="938.5,467.68,937.53,446.52,951.49,462.45,938.5,467.68" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[920a82f9c2ea2c6280fbe0f7e1b134e1]
reverse link Command to OpenCommand--><path d="M542.96,442.15 C476.63,513.42 349.12,650.45 298.24,705.13 " fill="none" id="Command-backto-OpenCommand" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="538.15,437.04,556.9,427.17,548.4,446.58,538.15,437.04" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[63f37d8f69afdc5f6a1576d1680399d5]
reverse link Command to FlagCommand--><path d="M562.1,445.33 C528.34,517.44 465.67,651.26 440.44,705.13 " fill="none" id="Command-backto-FlagCommand" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="555.79,442.31,570.61,427.17,568.47,448.25,555.79,442.31" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[cded0c1c5e699d83f3884ceb15321422]
reverse link Command to ChordCommand--><path d="M584.5,447.19 C584.5,519.71 584.5,651.72 584.5,705.13 " fill="none" id="Command-backto-ChordCommand" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="577.5,447.17,584.5,427.17,591.5,447.17,577.5,447.17" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[caa9734209d85115a8706f920dd5f3c6]
reverse link Command to HelpCommand--><path d="M607.19,445.33 C641.39,517.44 704.86,651.26 730.42,705.13 " fill="none" id="Command-backto-HelpCommand" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="600.82,448.24,598.57,427.17,613.47,442.24,600.82,448.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[34764411e171bd5d4bed2f90b5ccb712]
@startuml

class Game {
    #Command[string] _commands;
    +bool failed

    +@property bool won()
    +int mainLoop()
    +void registerCommand(string commandName, Command command)
    +{static} Board generateBoardWith(ProgramArgument pa)
}

Game *- - Board
Game o- - Command
Game ..> BoardGenerator
Game ..> ProgramArgument

enum Cell {
	empty
	mine
	mineFlagged
	emptyFlagged
	opened

    + {static} bool isFlaggedCell(Cell cell)
    + {static} bool isMineCell(Cell cell)
}

class Index2D <<struct>> {
    +int x
    +int y

    +int opCmp(const Index2D other)
    +Index2D opBinary(string op)(const Index2D rhs) if (op == "+")
    +Index2D opBinary(string op)(const Index2D rhs) if (op == "-")
}

class Board {
    #uint _height;
    #uint _width;
    #uint _mine_amount;
    #uint _flag_count;
    #uint _opened_count;
    #byte[][] _surrounding_mine_cell_counts;

    +@property uint height()
    +@property uint width()
    +@property uint mine_amount()
    +@property uint flag_count()
    +@property uint opened_count()

    +Cell getCell(Index2D i2d)
    #void setCell(Index2D i2d, Cell cell)
    +bool setMine(Index2D i2d)
    +void openCell(Index2D i2d)
    +bool toggleFlagged(Index2D i2d)
    +ubyte getSurroundingMineCellCount(Index2D i2d)
    +ubyte getSurroundingFlaggedCellCount(Index2D i2d)
    +bool isValidCellIndex(Index2D i2d)
    #string getCellString(Index2D i2d)
    +override string toString()
    +override bool opEquals(Object other)

    .. debug 用プロパティ・メソッド ..
    +debug @property Cell[][] cells()
    +debug ulong getActualMineCount()
}

Board *- - Cell

class ProgramArgument <<struct>> {
    +uint board_height
    +uint board_width
    +uint mine_amount
    +string board_file_path
}

abstract class BoardGenerator {
    #uint _board_height
    #uint _board_width

    @property Index2D[] mineIndexes()
    Board generateBoard()
}

class RandomBoardGenerator extends BoardGenerator {
    #uint _mine_amount
}

class ManualBoardGenerator extends BoardGenerator {
    #RedBlackTree!Index2D _mine_indexes;
}

class FromBoardStringBoardGenerator extends BoardGenerator {
    #Index2D[] _mine_indexes;
}

interface Command {
    +execute(string[] args, Game game)
}

class OpenCommand implements Command
class FlagCommand implements Command
class ChordCommand implements Command
class HelpCommand implements Command

hide <<struct>> circle

@enduml

PlantUML version 1.2021.16(Thu Dec 09 02:25:22 JST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: ja
Country: JP
--></g></svg>